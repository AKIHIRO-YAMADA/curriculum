Java用語
■ 開発
* ウォーターフォール開発
開発手順を一つずつ確認しながら工程を進めていく手法。

* アジャイル開発
クライアントの要望に応えるシステムを出来るだけ早くリリースする手法。

* マイグレーション
ソフトウェアやシステム、データなど新しい環境に移し替える事。

* デグレーション
ソフトウェアの質が以前より悪くなる事。

* デプロイ
開発したソフトウェアを実際の運用環境に配置・展開して稼働させること。

* コンフリクト
複数のプログラムが同じデータを使おうとしており、エラーが発生している状態。
* 環境
    * 開発環境（ローカル）
      ネットワークに接続しなくても利用できる状態。
    
    * 検証環境（ステージング）
      開発し終わってリリース予定の機能がちゃんと動くかテストするための環境
    
    * 本番環境
      サービス提供の、実運用を行う環境

* 設計書／仕様書
    * 要件定義
      クライアントの要望とその要望をどのように叶えるかを文章化したもの
    
    * 基本設計書
      ソフトウェアの動きを外から見た際にどういう動きをするのかを決めたもの。
    * 詳細設計書
      基本設計で決められた動きをどうやって実現するかを決めたもの。

* テスト
    * 単体テスト（UT）
      プログラムの作成が終わった段階で行うテスト
    
    * 結合テスト（CT／IT）
      複数のプログラムやモジュールを同時に稼働して行う動作テスト
    
    * 総合テスト（ST）
    構築したシステムが全体で予定通りの機能を満たしているか、また機能や性能が仕様書通りに構築できているかを検証すること

* エビデンス／証跡
システム開発でシステムが正常にまたは不具合が生じたことを示すデータを指す。

* データパッチ
ソフトに変更を加えるために用意された後付けのプログラムのこと。

* Access
システムや情報などを利用可能な状態にすること。
* マクロ
関連する複数の操作や手順、命令などを一つにまとめ、必要に応じて呼び出すことができるようにする機能のこと。
    * VBA
      Microsoft Officeに含まれるアプリケーションソフトの拡張機能で、利用者が簡易なプログラムを記述して実行することで複雑な処理の自動化などを行なうことができるもの。

* GAS（Google Apps Script）
 Googleのツールやサービスを連携して利用するためのプログラミング言語

* API
ソフトウェアやアプリケーションなどの一部を外部に向けて公開することにより、第三者が開発したソフトウェアと機能を共有できるようにしてくれるもの

    * WEB API
      WEBベースで提供されているAPIのこと。

    * REST API
      Webシステムを外部から利用するためのプログラムの呼び出し規約(API)の種類の一つで、RESTと呼ばれる設計原則に従って策定されたもの

    * SOAP
      異なるコンピュータ上で動作するプログラム同士がネットワークを通じてメッセージを伝え合い、連携して動作するための通信プロトコル（規約）の一つ。

* Ajax
JavaScriptとXMLを使って非同期にサーバとの間の通信を行うこと

    * XML
      文書やデータの意味や構造を記述するためのマークアップ言語の一つ。

    * JSON
      JavaScriptのオブジェクト記法を用いたデータ交換フォーマット

    * ステータスコード
    HTTPにおいてWebサーバからのレスポンスの意味を表現する3桁の数字からなるコードである

    * クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
      別オリジンのリソースへアクセス(＝ クロスサイトHTTPリクエスト)できるようにするためのルール、手法。

* バリデーション
入力内容や記述内容が要件を満たしているか、妥当性を確認すること

* データ連携
異なるアプリケーションやシステムをまたいでデータを共有、活用するために、それぞれの言葉や解釈の垣根を取り払うプロセス

    * Daemon
      UNIX系OSでメインメモリ上に常駐して特定の機能を提供するプログラム

    * CRON
    cronとは、多くのUNIX系OSで標準的に利用される常駐プログラム（デーモン）の一種で、利用者の設定したスケジュールに従って指定されたプログラムを定期的に起動してくれるもの。

    * バッチ
      どこかのタイミングでまとめて実施されるもの

    * ログ
      コンピュータの利用状況やデータ通信など履歴や情報の記録を取る事、またその記録を指す

    * CSV
      テキストデータとカンマのみで表示され、項目ごとにカンマで区切られたデータ

    * TSV
      項目間が「タブ」で区切られている書式のこと

* プルリクエスト（マージリクエスト）
  コードの変更をレビュワーに通知し、マージを依頼する機能。

■ チケット管理ツール
プロジェクト毎に発生する各種タスクを発行して、制作者に対して仕事を依頼するためのもの

* asana
プロジェクトを進める際チームでタスクを管理するためのツール。

* Backlog
オンラインで利用できるプロジェクト管理ツール。

* Jooto
カンバン方式のタスク・プロジェクト管理ツール

* Readmine
オープンソースのプロジェクト管理ソフトウェア

* Trello
カードを動かしながらタスクを視覚的に管理できるカンバン方式のツール。

■ バージョン管理
成果物の変更を管理する事
* 集中型
コードの管理はすべて中央のリポジトリだけで管理されるやり方。

* 分散型
リポジトリをコピーし、ローカルなワークスペースに置き、ブランチを切って作業する。

* Github
プログラムコードやデザインデータを保存・公開できるソースコード管理サービス

* Backlog
チームが協力しながら作業を進めるためのコラボレーション型プロジェクト管理ツール
* SourceTree
ウインドウ操作でGitを簡単に操作することのできるGUIツール

* Tortoise SVN
バージョン管理システムであるSubversionのクライアントフロントエンド。

* Git Flow
細かくブランチを切った運用モデル。
    * master
      リリース可能な完全品質を保証するブランチ。

    * release
    リリース作業を行うためのブランチ。
     developブランチから派生させる。

    * develop
      開発の主軸になるブランチ。
      masterブランチから派生させる。

        * feature
          機能追加および修正作業を行うためのブランチ。
          developブランチから派生させる。

■ FW／ライブラリ
* FW
    * Spring Framework
      Java言語によるソフトウェア開発を支援するフレームワークの一つ

    * Struts
      Javaを用いてWebアプリケーションを開発するためのフレームワークの一つ。

    * JSF（Java Server Faces）
      Java言語を用いてWebアプリケーションを開発するためのフレームワークの一つ

* ライブラリ
    * Bootstrap
      HTML／CSS／JavaScriptから構成される最も有名なWEBフレームワーク

    * Flyway
      DBマイグレーションフレームワーク。
      複数人でのアプリケーション開発時のDBマイグレーション作業を素早く手軽に行うことができる。

    * Jackson
    　javaのライブラリで、JSONオブジェクトをJavaオブジェクトにマップしたりその逆を行うことができます。

    * jQuery
    　JavaScriptの書き方などを簡単にすることが出来る、JavaScriptで作成されたライブラリ

    * Junit
      Javaで開発されたプログラムにおいてユニットテスト(単体テスト)の自動化を行うためのフレームワークである。

    * Log4j
      オープンソースのJava プログラム用のロギングユーティリティ（API）です。

    * Lombok
      コード自動生成を行うライブラリ・ツール。

    * ORM
      データベースとオブジェクト指向プログラミング言語の間の非互換なデータを変換するプログラミング技法である。

■ 連絡ツール
* ChatWork
  ビジネスコミュニケーションに特化したチャットツール

* Slack
  ビジネスコミュニケーションに特化したチャットツール

* IP Messenger
  同じネットワーク内のメンバーを自動認識し、簡単にクライアント同士がリアルタイムに情報交換できるソフトウェア

■ Java
* Javadoc
  JavaのソースコードからHTML形式のAPI仕様書を生成するものである

* アノテーション
  Javaではコンピューターに対してソースコードだけでは命令しきれない情報を伝えるために使用し、ワザとエラーを出したりすることができる。

* メモリ管理
    * ヒープ
      動的に確保と解放を繰り返せるメモリ

    * GC
      コンピュータプログラムが動的に確保したメモリ領域のうち、不要になった領域を自動的に解放する機能

* GoF
* オブジェクト指向プログラミングにおける再利用性の高いコーディングのパターン、デザインパターンをまとめた4人のプログラマのことを指します。

* デザインパターン
  GoF が命名した23個のパターンを意味します

■ その他
* オブジェクト指向
  壊れにくいシステム、修正しやすいシステムを実現するための考え方。

* バッチ処理
  バッチ単位でおこなわれる処理である。

* コンパイル
  プログラミング言語で記述されたソフトウェアの設計図（ソースコード）を、コンピュータが実行可能な形式（オブジェクトコード）に変換する作業のこと
  
* カバレッジ
  モノや範囲に対して全体の内どれくらいをカバーいているかを表すための指標
  
* プラットホーム
  サービスやシステム、ソフトウェアを提供・カスタマイズ・運営するために必要な共通の土台（基盤）となる標準環境

